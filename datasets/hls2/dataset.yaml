id: hls2
image: ${{ args.registry }}/pctasks-task-base:latest

args:
  - registry

code:
  src: ${{ local.path(./hls2.py) }}

environment:
  APPLICATIONINSIGHTS_CONNECTION_STRING: ${{ secrets.task-application-insights-connection-string }}

collections:
  - id: hls2-s30
    template: ${{ local.path(./collection/hls2-s30) }}
    class: hls2:HLS2Collection
    asset_storage:
      - uri: blob://hls2euwest/hls2/S30
        chunks:
          splits:
            - depth: 1
          options:
            ends_with: .jpg
            min_depth: 6
            max_depth: 6
            chunk_length: 20000
    chunk_storage:
      uri: blob://hls2euwest/hls2-s30-info/pctasks-chunks/

  - id: hls2-l30
    template: ${{ local.path(./collection/hls2-l30) }}
    class: hls2:HLS2Collection
    asset_storage:
      - uri: blob://hls2euwest/hls2/L30
        chunks:
          splits:
            - depth: 1
          options:
            ends_with: .jpg
            min_depth: 6
            max_depth: 6
            chunk_length: 20000
    chunk_storage:
      uri: blob://hls2euwest/hls2-l30-info/pctasks-chunks/

# The blob storage pattern is:
# | container
# |   S30/ or L30/ depending on collection
# |     56/         # numer part of tile, ~60 directories
# |       P/        # first letter of tile, ~15-20 directories
# |         PQ/     # next two letters of tile, ~20-60 directories
# |           2024/    # year
# |             01/    # month
# |               05/  # day
# |                 HLS.S30.T56PPQ.2024005T001421.v2.0/   # item ID which is upstream scene title
# |                   HLS.S30.T56PPQ.2024005T001421.v2.0.jpg
# |                   HLS.S30.T56PPQ.2024005T001421.v2.0.B01.tif
# |                   HLS.S30.T56PPQ.2024005T001421.v2.0.B02.tif
# |                   ...
# | eg S30/56/P/PQ/2024/01/05/HLS.S30.T56PPQ.2024005T001421.v2.0/HLS.S30.T56PPQ.2024005T001421.v2.0.B01.tif