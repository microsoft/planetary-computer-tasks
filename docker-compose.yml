version: "2.1"
services:
  azurite:
    container_name: pctasks-azurite
    image: mcr.microsoft.com/azure-storage/azurite:3.17.1
    hostname: azurite
    command: "azurite --silent --blobHost 0.0.0.0 --queueHost 0.0.0.0 --tableHost
      0.0.0.0 -l /workspace"
    ports:
      - "10000:10000" # Blob
      - "10001:10001" # Queue
      - "10002:10002" # Table
    volumes:
      - pctasks-azurite-data:/workspace

  # TODO: Removing the need for functions for now,
  #       but we will use them for triggering reactive
  #       workflows off of storage events; commenting out
  #       but not deleting.
  # functions:
  #   container_name: pctasks-functions
  #   image: pctasks-functions
  #   build:
  #     context: .
  #     dockerfile: pctasks_funcs/Dockerfile
  #   volumes:
  #     - ./pctasks:/home/site/pctasks
  #     - ./pctasks_funcs:/home/site/wwwroot
  #   ports:
  #     - "7071:7071" # Functions
  #   environment:
  #     - AzureWebJobsStorage=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;
  #     - WEBSITE_HOSTNAME=functions:7071

  #     # See .env for swithcing between docker-compose and kind cluster
  #     - PCTASKS_SERVER_URL=${PCTASKS_SERVER_URL}

  #     # Function queue trigger bindings ##
  #     - FUNC_NOTIFY_QUEUE_CONN_STR=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1;
  #     - FUNC_ROUTER_QUEUE_CONN_STR=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1;
  #     - FUNC_WORKFLOW_QUEUE_CONN_STR=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1;

  #     # Router settings ##############################################################

  #     ## Azure Storage

  #     ### Queues
  #     - PCTASKS_ROUTER__QUEUES_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1;

  #     ### Tables
  #     - PCTASKS_ROUTER__TABLES_ACCOUNT_URL=http://azurite:10002/devstoreaccount1
  #     - PCTASKS_ROUTER__TABLES_ACCOUNT_NAME=devstoreaccount1
  #     - PCTASKS_ROUTER__TABLES_ACCOUNT_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==

  #     # Notifications settings #######################################################

  #     ## Azure Storage

  #     ### Tables

  #     - PCTASKS_NOTIFICATIONS__TABLES_ACCOUNT_URL=http://azurite:10002/devstoreaccount1
  #     - PCTASKS_NOTIFICATIONS__TABLES_ACCOUNT_NAME=devstoreaccount1
  #     - PCTASKS_NOTIFICATIONS__TABLES_ACCOUNT_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==

  database:
    container_name: pctasks-database
    image: ghcr.io/stac-utils/pgstac:v0.6.6
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
      - PGUSER=username
      - PGPASSWORD=password
      - PGHOST=localhost
      - PGDATABASE=postgis
    ports:
      - "5499:5432"
    volumes:
      - pctasks-pgdata:/var/lib/postgresql/data
    command: postgres -N 500

  nginx:
    image: pctasks-nginx
    container_name: pctasks-nginx
    build:
      context: ./dev/nginx
      dockerfile: Dockerfile
    volumes:
      - ./dev/nginx/etc/nginx:/etc/nginx
    ports:
      - 8510:80
    depends_on:
      - server
      - stac-api
      - stac-browser

  server:
    container_name: pctasks-server
    image: pctasks-server
    build:
      context: pctasks
      dockerfile: server/Dockerfile
      args:
        - DEVELOPMENT=TRUE
    environment:
      - APP_ROOT_PATH=/tasks
      - APP_PORT=8511
      - WEB_CONCURRENCY=1

      - PCTASKS_SERVER__DEV=true
      - PCTASKS_SERVER__DEV_API_KEY=hunter2
      - PCTASKS_SERVER__DEV_AUTH_TOKEN=Bearer hunter2

      - PCTASKS_SERVER__RECORD_TABLES__CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;TableEndpoint=http://azurite:10002/devstoreaccount1;

      # Dev storage settings
      - AZURITE_HOST=azurite
      - AZURITE_PORT=10000
      - AZURITE_STORAGE_ACCOUNT=devstoreaccount1

      # Local secrets provider secrets
      - SECRETS_DB_CONNECTION_STRING=postgresql://username:password@database:5432/postgis

      # Run settings #######################################################

      # Dev executor settings
      - PCTASKS_RUN__TASK_RUNNER_TYPE=local
      - PCTASKS_RUN__LOCAL_DEV_ENDPOINTS_URL=http://local-dev-endpoints:8512
      - PCTASKS_RUN__LOCAL_SECRETS=true
      - PCTASKS_RUN__WORKFLOW_RUNNER_TYPE=local

      ## Azure Storage

      ### Queues
      - PCTASKS_RUN__NOTIFICATION_QUEUE__CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1;
      - PCTASKS_RUN__INBOX_QUEUE__CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1;
      - PCTASKS_RUN__SIGNAL_QUEUE__CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;QueueEndpoint=http://azurite:10001/devstoreaccount1;
      - PCTASKS_RUN__SIGNAL_QUEUE_ACCOUNT_NAME=devstoreaccount1
      - PCTASKS_RUN__SIGNAL_QUEUE_ACCOUNT_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==

      ### Tables
      - PCTASKS_RUN__TABLES_ACCOUNT_URL=http://azurite:10002/devstoreaccount1
      - PCTASKS_RUN__TABLES_ACCOUNT_NAME=devstoreaccount1
      - PCTASKS_RUN__TABLES_ACCOUNT_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==

      ### Blobs
      - PCTASKS_RUN__BLOB_ACCOUNT_URL=http://azurite:10000/devstoreaccount1
      - PCTASKS_RUN__BLOB_ACCOUNT_NAME=devstoreaccount1
      - PCTASKS_RUN__BLOB_ACCOUNT_KEY=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==

    volumes:
      - ./pctasks:/opt/src
    ports:
      - "8511:8511"
    command: >
      bash -c "uvicorn pctasks.server.main:app --host 0.0.0.0 --port 8511 --reload --proxy-headers"

  local-dev-endpoints:
    # HTTP endpoints for running tasks and serving secrets
    container_name: pctasks-local-dev-endpoints
    image: pctasks-dev
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8512:8512"
    volumes:
      - .:/opt/src
    environment:
      - APP_PORT=8512
      # Dev storage settings
      - AZURITE_HOST=azurite
      - AZURITE_PORT=10000
      - AZURITE_STORAGE_ACCOUNT=devstoreaccount1
      # Local dev secrets file
      - DEV_SECRETS_FILE=/opt/src/dev-secrets.yaml
    command:
      [
        "uvicorn",
        "pctasks.dev.local_dev_endpoints:app",
        "--host",
        "0.0.0.0",
        "--port",
        "8512",
        "--reload",
        "--proxy-headers"
      ]

  stac-api:
    container_name: pctasks-stac-api
    image: pctasks-stacapi
    build:
      context: .
      dockerfile: Dockerfile.stacapi
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8513
      - APP_ROOT_PATH=/stac
      - RELOAD=false
      - ENVIRONMENT=local
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST_READER=database
      - POSTGRES_HOST_WRITER=database
      - POSTGRES_PORT=5432
      - WEB_CONCURRENCY=10
      - VSI_CACHE=TRUE
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=1
    ports:
      - "8513:8513"
    volumes:
      - ./dev/stacapi.py:/opt/src/stacapi.py
    depends_on:
      - database
    command: [ "uvicorn", "stacapi:app", "--host", "0.0.0.0", "--port", "8513", "--reload", "--proxy-headers" ]

  stac-browser:
    container_name: pctasks-stac-browser
    image: pctasks-stacbrowser
    build:
      context: .
      dockerfile: Dockerfile.stacbrowser
    ports:
      - "8514:8080"

  frontend:
    container_name: pctasks-frontend-app
    image: node:16.16-slim
    working_dir: /usr/src/app
    env_file:
      - "pctasks_frontend/.env"
    ports:
      - "8515:8515"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - CHOKIDAR_INTERVAL=100
      - REACT_APP_DEV_AUTH_TOKEN=${REACT_APP_DEV_AUTH_TOKEN:-hunter2}
    volumes:
      - ./pctasks_frontend:/usr/src/app
    command: "npm start"

  # Used to let kind cluster pull local docker images
  # See https://kind.sigs.k8s.io/docs/user/local-registry/
  local-docker-registry:
    container_name: pctasks-local-docker-reg
    image: registry:2
    ports:
      - 5001:5000

networks:
  default:
    # Network created during scripts/setup
    external:
      name: pctasks-network

volumes:
  pctasks-azurite-data: null
  pctasks-pgdata: null
