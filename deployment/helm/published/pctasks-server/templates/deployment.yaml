apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pctasks.fullname" . }}
  labels:
    {{- include "pctasks.labels" . | nindent 4 }}
spec:
  {{- if not .Values.pctasks.server.deploy.autoscaling.enabled }}
  replicas: {{ .Values.pctasks.server.deploy.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pctasks.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.pctasks.server.deploy.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pctasks.selectorLabels" . | nindent 8 }}
        {{- with .Values.pctasks.server.deploy.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.pctasks.server.deploy.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pctasks.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.pctasks.server.deploy.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.pctasks.server.deploy.securityContext | nindent 12 }}
          image: "{{ .Values.pctasks.server.image.repository }}:{{ .Values.pctasks.server.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.pctasks.server.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: APP_ROOT_PATH
              value: "{{ .Values.pctasks.server.appRootPath }}"
            - name: APP_HOST
              value: "{{ .Values.pctasks.server.host }}"
            - name: APP_PORT
              value: "{{ .Values.pctasks.server.port }}"
            - name: FORWARDED_ALLOW_IPS
              value: "*"
            - name: "WEB_CONCURRENCY"
              value: "{{ .Values.pctasks.server.webConcurrency }}"
            - name: ENVIRONMENT
              value: "{{ .Values.pctasks.server.environment }}"
            - name: PCTASKS_SERVER__DEV
              value: "{{ .Values.pctasks.server.dev.enabled }}"
            - name: PCTASKS_SERVER__DEV_API_KEY
              value: "{{ .Values.pctasks.server.dev.api_key }}"
            - name: PCTASKS_SERVER__DEV_AUTH_TOKEN
              value: "{{ .Values.pctasks.server.dev.auth_token }}"

            {{- if .Values.pctasks.server.access_key.enabled }}
            - name: PCTASKS_SERVER__ACCESS_KEY
              value: "{{ .Values.pctasks.server.access_key.value }}"
            {{- end }}

            - name: PCTASKS_SERVER__APP_INSIGHTS_INSTRUMENTATION_KEY
              value: "{{ .Values.pctasks.server.instrumentationKey }}"

            ## Run settings ##

            - name: PCTASKS_RUN__TASK_RUNNER_TYPE
              value: "{{ .Values.pctasks.run.task_runner_type }}"
            - name: PCTASKS_RUN__WORKFLOW_RUNNER_TYPE
              value: "{{ .Values.pctasks.run.workflow_runner_type }}"

            - name: PCTASKS_RUN__TASK_POLL_SECONDS
              value: "{{ .Values.pctasks.run.task_poll_seconds }}"
            - name: PCTASKS_RUN__CHECK_OUTPUT_SECONDS
              value: "{{ .Values.pctasks.run.check_output_seconds }}"

            # Dev settings
            - name: PCTASKS_RUN__DEV
              value: "{{ .Values.pctasks.run.dev.enabled }}"
            - name: PCTASKS_RUN__LOCAL_DEV_ENDPOINTS_URL
              value: "{{ .Values.pctasks.run.dev.local_dev_endpoints_url }}"

            # Argo
            - name: PCTASKS_RUN__ARGO_HOST
              value: "{{ .Values.pctasks.run.argo.host }}"
            - name: PCTASKS_RUN__ARGO_TOKEN
              value: "{{ .Values.pctasks.run.argo.token }}"
            - name: PCTASKS_RUN__ARGO_NAMESPACE
              value: "{{ .Values.pctasks.run.argo.namespace }}"
            - name: PCTASKS_RUN__WORKFLOW_RUNNER_IMAGE
              value: "{{ .Values.pctasks.run.argo.workflow_runner_image }}"

            {{- if .Values.pctasks.run.argo.node_affinity.enabled }}
            - name: PCTASKS_RUN__ARGO_NODE_GROUP
              value: "{{ .Values.pctasks.run.argo.node_affinity.node_group }}"
            {{- end }}

            # Azurite storage settings
            {{- if .Values.pctasks.run.dev.azurite.enabled }}
            - name: AZURITE_HOST
              value: "{{ .Values.pctasks.run.dev.azurite.host }}"
            - name: AZURITE_PORT
              value: "{{ .Values.pctasks.run.dev.azurite.port }}"
            - name: AZURITE_STORAGE_ACCOUNT
              value: "{{ .Values.pctasks.run.dev.azurite.storage_account }}"
            {{- end }}

            # Local secrets
            {{- if .Values.pctasks.run.dev.secrets.enabled }}
            - name: PCTASKS_RUN__LOCAL_SECRETS
              value: "TRUE"
            {{- range .Values.pctasks.run.dev.secrets.values }}
            - name: SECRETS_{{ .name }}
              value: "{{ .value }}"
            {{- end }}
            {{- end }}

            {{- if .Values.pctasks.run.workload_identity.enabled }}
            - name: PCTASKS_RUN__TASK_SERVICE_ACCOUNT_NAME
              value: "{{ .Values.pctasks.run.workload_identity.service_account }}"
            - name: PCTASKS_RUN__TASK_WORKLOAD_IDENTITY_CLIENT_ID
              value: "{{ .Values.pctasks.run.workload_identity.client_id }}"
            - name: PCTASKS_RUN__TASK_WORKLOAD_IDENTITY_TENANT_ID
              value: "{{ .Values.pctasks.run.workload_identity.tenant_id }}"
            {{- end }}

            ### CosmosDB

            - name: PCTASKS_COSMOSDB__URL
              value: "{{ .Values.pctasks.cosmosdb.url }}"
            - name: PCTASKS_COSMOSDB__KEY
              value: "{{ .Values.pctasks.cosmosdb.key }}"

            {{- if .Values.pctasks.cosmosdb.dev.enabled }}
            - name: COSMOSDB_EMULATOR_HOST
              value: "{{ .Values.pctasks.cosmosdb.dev.emulator_host }}"
            - name: PCTASKS_COSMOSDB__TEST_CONTAINER_SUFFIX
              value: "{{ .Values.pctasks.cosmosdb.dev.test_container_suffix }}"
            {{- end }}

            ### Queues
            - name: PCTASKS_RUN__NOTIFICATION_QUEUE__QUEUE_NAME
              value: "{{ .Values.pctasks.run.notifications.queue_name }}"
            - name: PCTASKS_RUN__NOTIFICATION_QUEUE__CONNECTION_STRING
              value: "{{ .Values.pctasks.run.notifications.connection_string }}"

            ### Tables
            - name: PCTASKS_RUN__TABLES_ACCOUNT_URL
              value: "{{ .Values.pctasks.run.tables.account_url }}"
            - name: PCTASKS_RUN__TABLES_ACCOUNT_NAME
              value: "{{ .Values.pctasks.run.tables.account_name }}"
            {{- if .Values.pctasks.run.dev.azurite.enabled }}
            - name: PCTASKS_RUN__TABLES_ACCOUNT_KEY
              value: "{{ .Values.pctasks.run.tables.account_key }}"
            {{- end }}
            - name: PCTASKS_RUN__IMAGE_KEY_TABLE_NAME
              value: "{{ .Values.pctasks.run.tables.image_key_table_name }}"

            ### Blobs
            - name: PCTASKS_RUN__BLOB_ACCOUNT_URL
              value: "{{ .Values.pctasks.run.blob.account_url }}"
            - name: PCTASKS_RUN__BLOB_ACCOUNT_NAME
              value: "{{ .Values.pctasks.run.blob.account_name }}"
            {{- if .Values.pctasks.run.dev.azurite.enabled }}
            - name: PCTASKS_RUN__BLOB_ACCOUNT_KEY
              value: "{{ .Values.pctasks.run.blob.account_key }}"
            {{- end }}

            - name: PCTASKS_RUN__ARGO__HOST
              value: "{{ .Values.pctasks.run.argo.host }}"
            - name: PCTASKS_RUN__ARGO__TOKEN
              value: "{{ .Values.pctasks.run.argo.token }}"
            - name: PCTASKS_RUN__ARGO__NAMESPACE
              value: "{{ .Values.pctasks.run.argo.namespace }}"

            ## Azure Batch
            {{- if .Values.pctasks.run.batch.enabled }}
            - name: PCTASKS_RUN__BATCH_URL
              value: "{{ .Values.pctasks.run.batch.url }}"
            - name: PCTASKS_RUN__BATCH_NAME
              value: "{{ .Values.pctasks.run.batch.name }}"
            - name: PCTASKS_RUN__BATCH_KEY
              value: "{{ .Values.pctasks.run.batch.key }}"
            - name: PCTASKS_RUN__BATCH_DEFAULT_POOL_ID
              value: "{{ .Values.pctasks.run.batch.default_pool_id }}"
            - name: PCTASKS_RUN__BATCH_SUBMIT_THREADS
              value: "{{ .Values.pctasks.run.batch.submit_threads }}"
            {{- end }}

            ##  KeyVault
            {{- if .Values.pctasks.run.keyvault.enabled }}
            - name: PCTASKS_RUN__KEYVAULT_URL
              value: "{{ .Values.pctasks.run.keyvault.url }}"
            {{- end }}

          livenessProbe:
            httpGet:
              path: "/_mgmt/ping"
              port: http
          readinessProbe:
            httpGet:
              path: "/_mgmt/ping"
              port: http
          resources:
            {{- toYaml .Values.pctasks.server.deploy.resources | nindent 12 }}
      {{- with .Values.pctasks.server.deploy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pctasks.server.deploy.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.pctasks.server.deploy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
